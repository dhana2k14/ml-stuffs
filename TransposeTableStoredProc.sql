
CREATE FUNCTION DBO.NUMROWS (@DATASET VARCHAR(100)) RETURNS VARCHAR(100)
AS

BEGIN

DECLARE @TABLE VARCHAR(100)

SELECT @TABLE = 'SELECT TOP 1 COUNT(*) AS P FROM '+ STUFF(@DATASET,1,4,'')+ ' GROUP BY INVPIN ORDER BY P DESC'
RETURN @TABLE
END

////


CREATE PROCEDURE DBO.TESTPROC 

@DATASET VARCHAR(100)
	
AS

DECLARE @CODE NVARCHAR(MAX)
DECLARE @I INT
DECLARE @MAXROW INT

DECLARE @DATASET VARCHAR(100)
SET @DATASET='DBO.COJCOMPSTOP15'

SELECT DBO.NUMROWS(@DATASET) 
 
///

CREATE PROC DBO.FINDOBS 

@DATASET VARCHAR(100)

AS

DECLARE @OBSCODE VARCHAR(1000)

SELECT @OBSCODE = 'SELECT TOP 1 COUNT(*) AS P FROM '+ STUFF(@DATASET,1,4,'')+ ' GROUP BY INVPIN ORDER BY P DESC'

EXEC(@OBSCODE)

EXEC DBO.FINDOBS 'DBO.COJCOMPS1'



DECLARE @DATASET VARCHAR(100)
DECLARE @P INT
DECLARE @MAXROW INT
DECLARE @CODE NVARCHAR(MAX)
DECLARE @I INT
SET @DATASET='dbo.ParChild'
SET @CODE=''
SET @I=1

WHILE @I <= 9

BEGIN

SELECT @CODE = @CODE+',MAX(CASE WHEN ROW = '+ CAST(@I AS VARCHAR(7)) + ' THEN ' + QUOTENAME(COLUMN_NAME) + ' END) AS ' + COLUMN_NAME+CAST(@I AS VARCHAR(7))
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME =STUFF(@DATASET,1,4,'') AND COLUMN_NAME NOT IN ('ParentPin')

SET @I = @I+1

END

SET @CODE = 'SELECT ParentPIN'+@CODE+' into dbo.ParChild_1 FROM (SELECT *,ROW_NUMBER() OVER (PARTITION BY ParentPIN ORDER BY ParentPIN) AS ROW FROM DBO.'+STUFF(@DATASET,1,4,'')+') X GROUP BY ParentPIN'

PRINT @CODE

EXEC(@CODE)


select * from [dbo].[JOBURG]

alter table [dbo].[JOBURG] add REMINDER varchar(255)

select [ERF NO],[TOWNSHIP / SECTIONAL SCHEME NAME],ERF,Portion,DESCr,REMINDER from [dbo].[JOBURG] where REMINDER!='' CHARINDEX('RE',[ERF NO])>=1   e 'RE%' PATINDEX('[^0-9]',[ERF])=0

update [dbo].[JOBURG] set Descr=[ERF NO]+' OF '+[TOWNSHIP / SECTIONAL SCHEME NAME] where REMINDER='REM' and Descr is null



select a.Descr,b.Pin,b.PDesc from AG.[dbo].[JOBURG] a left join [dbo].[CojLayer250313] b on a.[Descr]=b.[PDesc]




















---------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE DBO.TRANSPOSEEMMCOMPS 
	
AS

CREATE INDEX IX_EMMCOMPSDATA ON DBO.EMMCOMPS1 (SUBJECTPIN)

DECLARE @CODE NVARCHAR(MAX)
DECLARE @DATASET VARCHAR(100)
DECLARE @I INT
DECLARE @MAXROW INT
SET @DATASET='DBO.COJCOMPSTOP15'

SET @CODE=''
SET @I=1

SELECT @MAXROW = COUNT(*) FROM DBO.EMMCOMPS1 GROUP BY SUBJECTPIN

PRINT @MAXROW

WHILE @I <= @MAXROW

BEGIN

SELECT @CODE = @CODE+',MAX(CASE WHEN ROW = '+ CAST(@I AS VARCHAR(7)) + ' THEN ' + QUOTENAME(COLUMN_NAME) + ' END) AS ' + COLUMN_NAME+CAST(@I AS VARCHAR(7))
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME ='EMMCOMPS1' AND COLUMN_NAME NOT IN ('SUBJECTPIN')

SET @I = @I+1

END

SET @CODE = 'SELECT SUBJECTPIN'+@CODE+' FROM (SELECT *,ROW_NUMBER() OVER (PARTITION BY SUBJECTPIN ORDER BY SUBJECTPIN) AS ROW FROM DBO.EMMCOMPS1) X GROUP BY SUBJECTPIN'

EXEC(@CODE)


EXEC DBO.TRANSPOSEEMMCOMPS